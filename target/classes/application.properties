###############
# Persistence #
###############


# Tells the Kogito runtime what kind of persistence is configured.
kogito.persistence.type=jdbc

# BAMOE provides a separate Flyway subsystem that allows Kogito's internal tables to be created and migrated
# without interfering with your application's Flyway, if you're using it.
#
# This property enables/disables running this isolated Flyway mechanism automatically when the application starts.
# If you want more control over when/how/who executes changes to your database, disable it and run the SQL scripts from `db-utils.zip` manually.
%prod.kie.flyway.enabled=false

# Replace <TODO>s with your Database's real configuration values for username, password and URLs.
#
# Configure your database connection here.
# Check out the BAMOE documentation for supported databases: https://www.ibm.com/docs/ibamoe
# https://quarkus.io/guides/datasource
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=<TODO>
%prod.quarkus.datasource.password=<TODO>
%prod.quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://<TODO>:5432/kogito}
%prod.quarkus.datasource.reactive.url=${QUARKUS_DATASOURCE_REACTIVE_URL:postgresql://<TODO>:5432/kogito}

# Dev
%dev.kie.flyway.enabled=true
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.username=kogito
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:default;NON_KEYWORDS=VALUE,KEY


############
# Security #
############

# Replace <TODO>s with your Identity Provider URL, OIDC Client ID and Secret
#
# https://quarkus.io/guides/security-oidc-configuration-properties-reference
%prod.kogito.auth.enabled=true
%prod.quarkus.oidc.enabled=true
%prod.quarkus.oidc.discovery-enabled=true
%prod.quarkus.oidc.tenant-enabled=true
%prod.quarkus.oidc.auth-server-url=<TODO>
%prod.quarkus.oidc.client-id=<TODO>
%prod.quarkus.oidc.credentials.secret=<TODO>
%prod.quarkus.oidc-proxy.enabled=true

%prod.quarkus.oidc.application-type=service
%prod.quarkus.http.auth.permission.authenticated.paths=/*
%prod.quarkus.http.auth.permission.authenticated.policy=authenticated
%prod.quarkus.http.auth.permission.public.paths=/q/*,/docs/openapi.json
%prod.quarkus.http.auth.permission.public.policy=permit

# If CORS is enabled, replace <TODO> with the list of origins allowed to access the app
#
# https://quarkus.io/guides/security-cors
%prod.quarkus.http.cors=false
%prod.quarkus.http.cors.origins=<TODO>

# Dev
%dev.kogito.auth.enabled=false
%dev.quarkus.oidc.enabled=false
%dev.quarkus.oidc-proxy.enabled=false
%dev.quarkus.http.cors=true
%dev.quarkus.http.cors.origins=*


############
# Services #
############

# These properties are residual from Distributed Architecture, where Data-Index, Data-Audit,
# and Jobs Service are external to the Kogito Runtime application.
#
# They are still necessary, but won't be anymore in future releases.

kogito.service.url=http://${quarkus.http.host}:${quarkus.http.port}
kogito.jobs-service.url=http://${quarkus.http.host}:${quarkus.http.port}
kogito.data-index.url=http://${quarkus.http.host}:${quarkus.http.port}


####################
# Containerization #
####################

# Replace <TODO>s with your application's name
#
# Profile to pack the application into a container image.
# To use it run a Maven build with the `container` profile (-Pcontainer)
# Remember to change the container-image.name and container-image.group
# By default the container-image.group is your username.
# https://quarkus.io/version/3.15/guides/container-image
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=${project.version}
%container.quarkus.container-image.name=<TODO>


#############
# Misc. dev #
#############

%dev.quarkus.smallrye-openapi.path=/docs/openapi.json
%dev.quarkus.http.test-port=0
%dev.quarkus.dev-ui.cors.enabled=false
%dev.quarkus.swagger-ui.always-include=true
%dev.quarkus.kogito.data-index.graphql.ui.always-include=true
%dev.jbpm.devui.users.admin.groups=admin
%dev.jbpm.devui.users.jdoe.groups=admin,HR,IT
%dev.jbpm.devui.users.mscott.groups=admin,HR,IT